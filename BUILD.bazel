load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@//lib:pkgbuild.bzl", "pkgbuild_tars")

# The resulting PKG should be installable by:
#
# sudo installer -pkg bazel-out/darwin-fastbuild/bin/macos-runner-{arch}.pkg -target /

# Test this payload with:
#     bazel build //:actions-runners && tar tzf bazel-bin/macos-runner-{arm64,amd64}.tar
# TODO: remove .dll files for smaller payload?

ARCH_DEP = {
    "amd64": { "d": "@@rules_multitool++multitool+multitool.actions_runner.macos_x86_64//tools/actions_runner:macos_x86_64_executable" },
    "arm64": { "d": "@@rules_multitool++multitool+multitool.actions_runner.macos_arm64//tools/actions_runner:macos_arm64_executable" },
}

# Copy the file to remask its non-tarball extension
[copy_file(
    name = "copy-{}".format(k),
    src = v["d"],
    out = "copy-{}.tar.gz".format(k),
    allow_symlink = True,
    is_executable = False,
) for k,v in ARCH_DEP.items() ]

[pkg_tar(
    name = "actions-runner-{}".format(k),
    mode = "0755",
    package_dir = "/usr/local/actions-runner",
    deps = [ "copy-{}".format(k) ],
) for k,v in ARCH_DEP.items() ]

[pkgbuild_tars(
    name = "macos-runner-{}".format(k),
    package_name = "macos-runner-{}.pkg".format(k),
    identifier = "com.chickenandpork.macos-runner",
    tars = [":actions-runner-{}".format(k)],
    version = "${VERSION}",  # indirectly drawn from workspace_status based on git tag vX.Y.Z
) for k,v in ARCH_DEP.items() ]


[copy_file(
    name = "dist_pkg-{}".format(k),
    src = ":macos-runner-{}".format(k),
    out = ".distrib/macos-runner-{}.pkg".format(k),
    allow_symlink = True,
    is_executable = False,
) for k,v in ARCH_DEP.items() ]

filegroup(name="actions-runners", srcs = [ "dist_pkg-{}".format(k) for k in ARCH_DEP.keys() ])
